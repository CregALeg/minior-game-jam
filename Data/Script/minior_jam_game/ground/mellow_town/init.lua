--[[
    init.lua
    Created: 03/30/2025 16:04:06
    Description: Autogenerated script file for the map mellow_town.
]]--
-- Commonly included lua functions and data
require 'origin.common'

local mellow_town_tutor = require 'minior_jam_game.ground.mellow_town.mellow_town_tutor'
local mellow_town_tea = require 'minior_jam_game.ground.mellow_town.mellow_town_juice'

-- Package name
local mellow_town = {}

-------------------------------
-- Map Callbacks
-------------------------------
---mellow_town.Init(map)
--Engine callback function
function mellow_town.Init(map)
  COMMON.RespawnAllies()
  local partner = CH('Teammate1')
  -- AI:SetCharacterAI(partner, "origin.ai.ground_partner", CH('PLAYER'), partner.Position)
  partner.CollisionDisabled = true

  mellow_town.RescueHandler() --Handle rescues

  -- Enable Miniors
  if SV.missions.FinishedMissions["RedMiniorRescue"] ~= nil then
    GROUND:Unhide("RedMinior")
  end
  if SV.missions.FinishedMissions["OrangeMiniorRescue"] ~= nil then
    GROUND:Unhide("OrangeMinior")
  end
  if SV.missions.FinishedMissions["YellowMiniorRescue"] ~= nil then
    GROUND:Unhide("YellowMinior")
  end
  if SV.missions.FinishedMissions["BlueMiniorRescue"] ~= nil then
    GROUND:Unhide("BlueMinior")
  end
  if SV.missions.FinishedMissions["GreenMiniorRescue"] ~= nil then
    GROUND:Unhide("GreenMinior")
  end
  if SV.missions.FinishedMissions["IndigoMiniorRescue"] ~= nil then
    GROUND:Unhide("IndigoMinior")
  end
  if SV.missions.FinishedMissions["VioletMiniorRescue"] ~= nil then
    GROUND:Unhide("VioletMinior")
  end

  -- Enable Team Glamour at certain story points
  if SV.mellow_town.CutsceneGlamour2Done == true then
    GROUND:Unhide("NPC_Sneasler")
    GROUND:Unhide("NPC_Tsareena")
  end

  if SV.mellow_town.AfterCutsceneGlamour2 == true then
    SV.mellow_town.AfterCutsceneGlamour2 = false
  end
end

function mellow_town.RescueHandler() --Handler function for the Minior rescues.
  local quest = nil
  local complete = ""
  -- Windswept Trail
  quest = SV.missions.Missions["RedMiniorRescue"]
  if quest ~= nil then
    if quest.Complete == COMMON.MISSION_COMPLETE then
      COMMON.CompleteMission("RedMiniorRescue")
      complete = "RedMinior"
    end
  end
  -- Verdant Meadow
  quest = SV.missions.Missions["GreenMiniorRescue"]
  if quest ~= nil then
    if quest.Complete == COMMON.MISSION_COMPLETE then
      COMMON.CompleteMission("GreenMiniorRescue")
      complete = "GreenMinior"
    end
  end
  -- Frigid Lake
  quest = SV.missions.Missions["BlueMiniorRescue"]
  if quest ~= nil then
    if quest.Complete == COMMON.MISSION_COMPLETE then
      COMMON.CompleteMission("BlueMiniorRescue")
      complete = "BlueMinior"
    end
  end
  -- Magma Tunnel
  quest = SV.missions.Missions["OrangeMiniorRescue"]
  if quest ~= nil then
    if quest.Complete == COMMON.MISSION_COMPLETE then
      COMMON.CompleteMission("OrangeMiniorRescue")
      complete = "OrangeMinior"
    end
  end
  --Lunar Barrow
  quest = SV.missions.Missions["IndigoMiniorRescue"]
  if quest ~= nil then
    if quest.Complete == COMMON.MISSION_COMPLETE then
      COMMON.CompleteMission("IndigoMiniorRescue")
      complete = "IndigoMinior"
    end
  end
  --Primal Canyon
  quest = SV.missions.Missions["YellowMiniorRescue"]
  if quest ~= nil then
    if quest.Complete == COMMON.MISSION_COMPLETE then
      COMMON.CompleteMission("YellowMiniorRescue")
      complete = "YellowMinior"
    end
  end
  --Stardust Peak
  quest = SV.missions.Missions["VioletMiniorRescue"]
  if quest ~= nil then
    if quest.Complete == COMMON.MISSION_COMPLETE then
      COMMON.CompleteMission("VioletMiniorRescue")
      complete = "VioletMinior"
    end
  end
  -- Rescue is true
  if complete ~= "" then
    mellow_town.RescuedCutscene(complete)
  end
end

function mellow_town.RescuedCutscene(minior_colour)
  GAME:CutsceneMode(true)

  local rewards_table = {
    ["RedMinior"] = "xcl_family_minior_00",
    ["GreenMinior"] = "held_friend_bow",
    ["BlueMinior"] = "held_x_ray_specs",
    ["OrangeMinior"] = "xcl_family_minior_01",
    ["IndigoMinior"] = "xcl_family_minior_02",
    ["YellowMinior"] = "tm_acrobatics",
    ["VioletMinior"] = "xcl_family_minior_03"
  }

  local player = CH("PLAYER")
  local partner = CH("Teammate1")
  local minior2 = CH(minior_colour)

  miniorx = minior2.Bounds.Center.X
  miniory = minior2.Bounds.Center.Y
  miniorDir = minior2.Direction

  GROUND:Unhide(minior_colour)

  GROUND:TeleportTo(player, 400, 16, Direction.Down)
  GROUND:TeleportTo(partner, 432, 16, Direction.Down)
  GROUND:TeleportTo(minior2, 416, 40, Direction.Up)

  GAME:FadeIn(20)

  reward = rewards_table[minior_colour]

  UI:SetSpeaker(minior2)
  UI:WaitShowDialogue("Thank you for rescuing me!")
  UI:WaitShowDialogue("Please accept this token of my appreciation.")

  GAME:GivePlayerItem("seed_reviver", 1)
  GAME:GivePlayerItem("berry_sitrus", 1)
  GAME:GivePlayerItem(reward, 1)
  UI:ResetSpeaker()
  SOUND:PlayFanfare("Fanfare/Note")
  UI:WaitShowDialogue("[sound=]You received a "..RogueEssence.Dungeon.InvItem("seed_reviver"):GetDisplayName()..".")
  SOUND:PlayFanfare("Fanfare/Note")
  UI:WaitShowDialogue("[sound=]You received a "..RogueEssence.Dungeon.InvItem("berry_sitrus"):GetDisplayName()..".")
  SOUND:PlayFanfare("Fanfare/Note")
  UI:WaitShowDialogue("[sound=]You received a "..RogueEssence.Dungeon.InvItem(reward):GetDisplayName()..".")

  GAME:FadeOut(false, 20)
  GROUND:TeleportTo(minior2, miniorx, miniory, miniorDir)
  GAME:FadeIn(20)
  GAME:CutsceneMode(false)
end

---mellow_town.Enter(map)
--Engine callback function
function mellow_town.Enter(map)
  local player = CH("PLAYER")
  GROUND:TeleportTo(CH('Teammate1'), player.Bounds.Center.X, player.Bounds.Center.Y, Direction.Up)
  mellow_town.CutsceneHandler()
  GAME:FadeIn(20)

end

---mellow_town.Exit(map)
--Engine callback function
function mellow_town.Exit(map)


end

---mellow_town.Update(map)
--Engine callback function
function mellow_town.Update(map)


end

---mellow_town.GameSave(map)
--Engine callback function
function mellow_town.GameSave(map)


end

---mellow_town.GameLoad(map)
--Engine callback function
function mellow_town.GameLoad(map)
  local player = CH("PLAYER")
  GROUND:TeleportTo(CH("Teammate1"), player.Bounds.Center.X, player.Bounds.Center.Y, Direction.Up)
  mellow_town.CutsceneHandler()
  GAME:FadeIn(20)

end

function mellow_town.CutsceneHandler()
  if SV.mellow_town.CutsceneIntro == false then --First entry
    mellow_town.CutsceneIntro()
  end
  if SV.mellow_town.CanDoCutsceneGlamour1 == true then --Enabled after Windswept Trail
    mellow_town.CutsceneGlamour1()
  end
  if SV.mellow_town.CanDoCutsceneGlamour2 == true then --Enabled after Magma Tunnel/Lunar Barrow? Undecided
    mellow_town.CutsceneGlamour2()
  end
  if SV.mellow_town.CanDoCutsceneVanguard1 == true then --Enabled after Primal Canyon
    mellow_town.CutsceneVanguard1()
  end
  local partner = CH('Teammate1')
  AI:SetCharacterAI(partner, "origin.ai.ground_partner", CH('PLAYER'), partner.Position)
end

-------------------------------
-- Entities Callbacks
-------------------------------
function mellow_town.NPC_Drilbur_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.mellow_town.CutsceneGlamour2Done == true then
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("[color=#F8A0F8]Team Glamour[color] said there's a monster on [color=#F8C060]Stardust Peak[color], right?")
    UI:WaitShowDialogue("What if it comes down here?[pause=20] What if it eats everyone?!")
  elseif SV.mellow_town.CutsceneGlamour1Done == true then
    UI:WaitShowDialogue("That [color=#F8A0F8]Team Glamour[color] sure is something, huh?")
  else
    UI:WaitShowDialogue("I heard meteor or something crashed near [color=#F8C060]Wishing Woods[color].")
  end
end

function mellow_town.NPC_Lilligant_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.mellow_town.AfterCutsceneGlamour2 == true then
    UI:WaitShowDialogue(CH("NPC_Tsareena"):GetDisplayName().." should wake up soon.")
    UI:WaitShowDialogue("I'll make certain that the both of them rest up and recover.")
  else
    UI:WaitShowDialogue("All the flowers you see around town are my handiwork.")
    UI:WaitShowDialogue("[emote=happy]I sure hope you like them.")
    UI:WaitShowDialogue("[emote=determined]Do not step on them.")
  end
end

function mellow_town.NPC_Monferno_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("I have trained under Master [color=#00F8F8]Mienshao[color] for many years.")
  UI:WaitShowDialogue("There is no Pok√©mon with a greater grasp of moves than her.")
end

function mellow_town.NPC_Cyclizar_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("Have you tried [color=#00F8F8]Polteageist[color]'s tea yet?")
  UI:WaitShowDialogue("It's the fuel that runs my engine!")
end

function mellow_town.NPC_Morgrem_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("\'Sup.")
end

function mellow_town.NPC_Fearow_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("I was an adventurer when I was younger.")
  UI:WaitShowDialogue("I saw the world, battled fearsome foes...")
  UI:WaitShowDialogue("But in the end, I realised all I really wanted was a quiet life.")
end

function mellow_town.NPC_Spearow_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("I wanna be an adventurer when I grow up!")
end

function mellow_town.NPC_Gramps_Action(chara, activator)
  local player = CH("PLAYER")
  local state = 0
  local strings = {}
  strings["Windswept Trail"] = "[speed=0.7]As I said before, [color=#F8C060]Windswept Trail[color] is a Dungeon that runs down by the coast.[br][speed=0.7]It's home to many \\uE088Flying-type Pok√©mon.[pause=0] Sometimes, a strange wind will kick up that protects \\uE088Flying-type Pok√©mon, so your \\uE090Rock or \\uE084Electric-type moves will be less effective.[br][speed=0.7]I've also heard of a secret side path drenched in rain, one that leads to another Mystery Dungeon."
  strings["Frigid Lake"] = "[speed=0.7][color=#F8C060]Frigid Lake[color], as the name suggests, is home to many \\uE091Ice and \\uE092Water-type Pok√©mon.[br][speed=0.7]You'll occasionally find it raining there, which will make \\uE092Water-type moves more powerful.[br][speed=0.7]Watch out for [color=#009800]Spheal[color], [color=#009800]Sealeo[color] and [color=#009800]Walrein[color] especially![pause=0] Their Brine and Ice Ball moves can be very dangerous!"
  strings["Verdant Meadow"] = "[speed=0.7]A beautiful meadow that is home to many \\uE08AGrass-type Pok√©mon.[br][speed=0.7]It has many wide open spaces, so take care not to get overwhelmed by too many enemies.[br][speed=0.7]You'll also find dark tall grass that will obscure anyone hiding inside, and limit your vision."
  strings["Magma Tunnel"] = "[speed=0.7][color=#F8C060]Magma Tunnel[color] was supposedly carved out ages ago by a gigantic [color=#009800]Orthworm[color]. Now, it is filled with lava and home to many \\uE087Fire-type Pok√©mon.[br][speed=0.7]Be careful of burns from them or the lava if you accidentally step on it![br][speed=0.7]As airborne Pok√©mon will be able to fly over it, and any \\uE087Fire or \\uE083Dragon-type allies will be able to walk over it."
  strings["Lunar Barrow"] = "[speed=0.7]This dungeon is said to house a secret lake at its center where the shores change with the phases of the moon.[pause=0] It's also said this lake is protected by a ferocious guardian![br][speed=0.7]Otherwise, [color=#F8C060]Lunar Barrow[color] is home to \\uE082Dark and \\uE08DFairy-types.[br][speed=0.7]Some levels of the dungeon are drenched in darkness, making it very difficult to spot traps and enemies."
  strings["Primal Canyon"] = "[speed=0.7]An ancient place, [color=#F8C060]Primal Canyon[color] is home to many ancient \\uE090Rock-type Pok√©mon.[br][speed=0.7]It's a very deep dungeon, so make sure to take food with you![br][speed=0.7]Once you reach the halfway point, you'll be so deep underground that you find lava, as well as more powerful Pok√©mon!"
  strings["Stardust Peak"] = "[speed=0.7]In my youth I never defeated [color=#F8C060]Stardust Peak[color]. It'll be the longest dungeon you've tackled yet. Make sure to bring food with you.[br][speed=0.7]Otherwise, the dungeon is supposed to be chock-full of \\uE083Dragon-type Pok√©mon.[br][speed=0.7]I've heard some of the levels are dark, others swirl with mist."
  strings["Mindscape Cavern"] = "[speed=0.7]This is where [color=#009800]Jirachi[color] is said to live...[br][speed=0.7]I hadn't heard of this dungeon until recently, so I'm sorry but I don't know much about it."

  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  -- Get unlocked dungeons
  local dungeon_choices = { "Windswept Trail" }
  if _DATA.Save:GetDungeonUnlock("frigid_lake") ~= RogueEssence.Data.GameProgress.UnlockState.None  then
    table.insert(dungeon_choices, "Frigid Lake")
  end
  if _DATA.Save:GetDungeonUnlock("verdant_meadow") ~= RogueEssence.Data.GameProgress.UnlockState.None  then
    table.insert(dungeon_choices, "Verdant Meadow")
  end
  if _DATA.Save:GetDungeonUnlock("magma_tunnel") ~= RogueEssence.Data.GameProgress.UnlockState.None  then
    table.insert(dungeon_choices, "Magma Tunnel")
  end
  if _DATA.Save:GetDungeonUnlock("lunar_barrow") ~= RogueEssence.Data.GameProgress.UnlockState.None  then
    table.insert(dungeon_choices, "Lunar Barrow")
  end
  if _DATA.Save:GetDungeonUnlock("primal_canyon") ~= RogueEssence.Data.GameProgress.UnlockState.None  then
    table.insert(dungeon_choices, "Primal Canyon")
  end
  if _DATA.Save:GetDungeonUnlock("stardust_peak") ~= RogueEssence.Data.GameProgress.UnlockState.None  then
    table.insert(dungeon_choices, "Stardust Peak")
  end
  if _DATA.Save:GetDungeonUnlock("mindscape_cavern") ~= RogueEssence.Data.GameProgress.UnlockState.None  then
    table.insert(dungeon_choices, "Mindscape Cavern")
  end
  table.insert(dungeon_choices, "Cancel")
  local choice_end = #dungeon_choices

  UI:WaitShowDialogue("[speed=0.7]I can tell you about the different Mystery Dungeons you've found, if you like.")
  while state > -1 do
    UI:BeginChoiceMenu("[speed=0.7]What dungeon do you want to know about?", dungeon_choices, 1, choice_end)
    UI:WaitForChoice()
    local result = UI:ChoiceResult()
    if result == choice_end then
      state = -1
    else
      local string = strings[dungeon_choices[result]]
      UI:WaitShowDialogue(STRINGS:Format(string))
    end
  end
  UI:WaitShowDialogue("[speed=0.7]Good luck.[pause=20] And be safe!")
end

function mellow_town.NPC_Sneasler_Action(chara, activator)
  UI:SetSpeaker(chara)
  if SV.mellow_town.CutsceneVanguard1Done == true then
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue("[color=#F8A0F8]Team Vanguard[color] is here now...")
    UI:WaitShowDialogue("Just hold on, " ..CH("NPC_Granbull"):GetDisplayName().."...")
  elseif SV.mellow_town.CutsceneGlamour2Done == true then --After return cutscene
    GROUND:CharTurnToChar(chara,CH('PLAYER'))
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue("I sure hope " ..CH("NPC_Granbull"):GetDisplayName().. " is okay...")
    UI:WaitShowDialogue("She just needs to hold out a few more days before [color=#F8A0F8]Team Vanguard[color] arrive...")
  else
    UI:WaitShowDialogue("Hmm...[pause=20] The Kecleon Brothers sure do have an eclectic inventory...")
  end
end

function mellow_town.NPC_Tsareena_Action(chara, activator)
  UI:SetSpeaker(chara)
  if SV.mellow_town.AfterCutsceneGlamour2 == true then
    UI:ResetSpeaker()
    UI:WaitShowDialogue(chara:GetDisplayName().." is out cold.")
  elseif SV.mellow_town.CutsceneGlamour2Done == true then --After return cutscene
    GROUND:CharTurnToChar(chara,CH('PLAYER'))
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue("I could've helped " ..CH("NPC_Granbull"):GetDisplayName().. "...")
    UI:WaitShowDialogue("I should have![pause=30] But all I could think about was myself...[pause=20] Again...")
  else
    UI:WaitShowDialogue("Tch...[pause=20] nothing to my tastes...")
  end
end

function mellow_town.NPC_Granbull_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("Hmmm...")
end

function mellow_town.NPC_Silvally_Action(chara, activator)
  GROUND:CharTurnToChar(chara, CH("PLAYER"))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("Your spirit is commendable.[pause=0] For two so young to take on Mystery Dungeons is no ordinary feat.")
  UI:WaitShowDialogue("You should be proud of all you have accomplished.")
  GROUND:EntTurn(chara, Direction.UpRight)
end

function mellow_town.NPC_Ceruledge_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("Perhaps food would be in order...")
  UI:WaitShowDialogue("The rescue target will surely be hungry...")
end

function mellow_town.NPC_Noivern_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("I wonder if they have a " ..RogueEssence.Dungeon.InvItem("berry_lum"):GetDisplayName().."?")
end

function mellow_town.STORAGE_COUNTER_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()

  local state = 0
  local repeated = false

  local chara = CH("STORAGE_Kangaskhan")
  UI:SetSpeaker(chara)

  while state > -1 do
    local has_items = GAME:GetPlayerBagCount() + GAME:GetPlayerEquippedCount() > 0
    local has_storage = GAME:GetPlayerStorageCount() > 0

    local msg = STRINGS:Format(STRINGS.MapStrings['STORAGE_KANGA_INTRO'])
    if repeated == true then
      msg = STRINGS:Format(STRINGS.MapStrings['STORAGE_KANGA_INTRO_2'])
    end
    local storage_choices = { { STRINGS:FormatKey('MENU_STORAGE_STORE'), has_items},
    { STRINGS:FormatKey('MENU_STORAGE_TAKE_ITEM'), has_storage},
    { STRINGS:FormatKey('MENU_STORAGE_STORE_ALL'), has_items},
    { STRINGS:FormatKey("MENU_CANCEL"), true}}
    UI:BeginChoiceMenu(msg, storage_choices, 1, 4)
    UI:WaitForChoice()
    local result = UI:ChoiceResult()
    repeated = true
    if result == 1 then
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Storage_Store'], STRINGS:LocalKeyString(26)))
      UI:StorageMenu()
      UI:WaitForChoice()
    elseif result == 2 then
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Storage_Unstore'], STRINGS:LocalKeyString(26)))
      UI:WithdrawMenu()
      UI:WaitForChoice()
      elseif result == 3 then
        UI:ChoiceMenuYesNo(STRINGS:FormatKey('DLG_STORE_ALL_CONFIRM'), false);
        UI:WaitForChoice()
        if UI:ChoiceResult() then
          GAME:DepositAll()
        end
    elseif result == 4 then
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Storage_Goodbye']))
      state = -1
    end
  end
end

-- function mellow_town.ShopReroll_Action(obj, activator)
--   print(COMMON.ESSENTIALS)
--   COMMON.EndDayCycle()
-- end

function mellow_town.SHOP_LEFT_COUNTER_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine

  local state = 0
  local repeated = false
  local cart = {}
  local catalog = { }
  for ii = 1, #SV.mart_shop, 1 do
  local base_data = SV.mart_shop[ii]
  local item_data = { Item = RogueEssence.Dungeon.InvItem(base_data.Index, false, base_data.Amount), Price = base_data.Price }
  table.insert(catalog, item_data)
  end


  local chara = CH('MART_Kecleon_Left')
  UI:SetSpeaker(chara)

  while state > -1 do
    if state == 0 then
      local msg = STRINGS:Format(STRINGS.MapStrings['Shop_Intro'])
      if repeated == true then
        msg = STRINGS:Format(STRINGS.MapStrings['Shop_Intro_Return'])
      end
      local shop_choices = {STRINGS:Format(STRINGS.MapStrings['Shop_Option_Buy']), STRINGS:Format(STRINGS.MapStrings['Shop_Option_Sell']),
      STRINGS:FormatKey("MENU_INFO"),
      STRINGS:FormatKey("MENU_EXIT")}
      UI:BeginChoiceMenu(msg, shop_choices, 1, 4)
      UI:WaitForChoice()
      local result = UI:ChoiceResult()
      repeated = true
      if result == 1 then
        if #catalog > 0 then
          --TODO: use the enum instead of a hardcoded number
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy'], STRINGS:LocalKeyString(26)))
          state = 1
        else
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy_Empty']))
        end
      elseif result == 2 then
        local bag_count = GAME:GetPlayerBagCount() + GAME:GetPlayerEquippedCount()
        if bag_count > 0 then
          --TODO: use the enum instead of a hardcoded number
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Sell'], STRINGS:LocalKeyString(26)))
          state = 3
        else
          UI:SetSpeakerEmotion("Angry")
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Bag_Empty']))
          UI:SetSpeakerEmotion("Normal")
        end
      elseif result == 3 then
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_001']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_002']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_003']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_004']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_005']))
      else
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Goodbye']))
        state = -1
      end
    elseif state == 1 then
      UI:ShopMenu(catalog)
      UI:WaitForChoice()
      local result = UI:ChoiceResult()
      if #result > 0 then
        local bag_count = GAME:GetPlayerBagCount() + GAME:GetPlayerEquippedCount()
        local bag_cap = GAME:GetPlayerBagLimit()
        if bag_count == bag_cap then
          UI:SetSpeakerEmotion("Angry")
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Bag_Full']))
          UI:SetSpeakerEmotion("Normal")
        else
          cart = result
          state = 2
        end
      else
        state = 0
      end
    elseif state == 2 then
      local total = 0
      for ii = 1, #cart, 1 do
        total = total + catalog[cart[ii]].Price
      end
      local msg
      if total > GAME:GetPlayerMoney() then
        UI:SetSpeakerEmotion("Angry")
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy_No_Money']))
        UI:SetSpeakerEmotion("Normal")
        state = 1
      else
        if #cart == 1 then
          local name = catalog[cart[1]].Item:GetDisplayName()
          msg = STRINGS:Format(STRINGS.MapStrings['Shop_Buy_One'], STRINGS:FormatKey("MONEY_AMOUNT", total), name)
        else
          msg = STRINGS:Format(STRINGS.MapStrings['Shop_Buy_Multi'], STRINGS:FormatKey("MONEY_AMOUNT", total))
        end
        UI:ChoiceMenuYesNo(msg, false)
        UI:WaitForChoice()
        result = UI:ChoiceResult()

        if result then
          GAME:RemoveFromPlayerMoney(total)
          for ii = 1, #cart, 1 do
            local item = catalog[cart[ii]].Item
            GAME:GivePlayerItem(item.ID, item.Amount, false)
          end
          for ii = #cart, 1, -1 do
            table.remove(catalog, cart[ii])
            table.remove(SV.mart_shop, cart[ii])
          end

          cart = {}
          SOUND:PlayBattleSE("DUN_Money")
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy_Complete']))
          state = 0
        else
          state = 1
        end
      end
    elseif state == 3 then
      UI:SellMenu()
      UI:WaitForChoice()
      local result = UI:ChoiceResult()

      if #result > 0 then
        cart = result
        state = 4
      else
        state = 0
      end
    elseif state == 4 then
      local total = 0
      for ii = 1, #cart, 1 do
        local item
        if cart[ii].IsEquipped then
          item = GAME:GetPlayerEquippedItem(cart[ii].Slot)
        else
          item = GAME:GetPlayerBagItem(cart[ii].Slot)
        end
        total = total + item:GetSellValue()
      end
      local msg
      if #cart == 1 then
        local item
        if cart[1].IsEquipped then
          item = GAME:GetPlayerEquippedItem(cart[1].Slot)
        else
          item = GAME:GetPlayerBagItem(cart[1].Slot)
        end
        msg = STRINGS:Format(STRINGS.MapStrings['Shop_Sell_One'], STRINGS:FormatKey("MONEY_AMOUNT", total), item:GetDisplayName())
      else
        msg = STRINGS:Format(STRINGS.MapStrings['Shop_Sell_Multi'], STRINGS:FormatKey("MONEY_AMOUNT", total))
      end
      UI:ChoiceMenuYesNo(msg, false)
      UI:WaitForChoice()
      result = UI:ChoiceResult()

      if result then
        for ii = #cart, 1, -1 do
          if cart[ii].IsEquipped then
            GAME:TakePlayerEquippedItem(cart[ii].Slot, true)
          else
            GAME:TakePlayerBagItem(cart[ii].Slot, true)
          end
        end
        SOUND:PlayBattleSE("DUN_Money")
        GAME:AddToPlayerMoney(total)
        cart = {}
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Sell_Complete']))
        state = 0
      else
        state = 3
      end
    end
  end
end

function mellow_town.SHOP_RIGHT_COUNTER_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine

  local state = 0
  local repeated = false
  local cart = {}
  local catalog = { }
  for ii = 1, #SV.wares_shop, 1 do
  local base_data = SV.wares_shop[ii]
  local item_data = { Item = RogueEssence.Dungeon.InvItem(base_data.Index, false, base_data.Amount), Price = base_data.Price }
  table.insert(catalog, item_data)
  end


  local chara = CH('MART_Kecleon_Right')
  UI:SetSpeaker(chara)

  while state > -1 do
    if state == 0 then
      local msg = STRINGS:Format(STRINGS.MapStrings['Shop_Intro'])
      if repeated == true then
        msg = STRINGS:Format(STRINGS.MapStrings['Shop_Intro_Return'])
      end
      local shop_choices = {STRINGS:Format(STRINGS.MapStrings['Shop_Option_Buy']), STRINGS:Format(STRINGS.MapStrings['Shop_Option_Sell']),
      STRINGS:FormatKey("MENU_INFO"),
      STRINGS:FormatKey("MENU_EXIT")}
      UI:BeginChoiceMenu(msg, shop_choices, 1, 4)
      UI:WaitForChoice()
      local result = UI:ChoiceResult()
      repeated = true
      if result == 1 then
        if #catalog > 0 then
          --TODO: use the enum instead of a hardcoded number
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy'], STRINGS:LocalKeyString(26)))
          state = 1
        else
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy_Empty']))
        end
      elseif result == 2 then
        local bag_count = GAME:GetPlayerBagCount() + GAME:GetPlayerEquippedCount()
        if bag_count > 0 then
          --TODO: use the enum instead of a hardcoded number
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Sell'], STRINGS:LocalKeyString(26)))
          state = 3
        else
          UI:SetSpeakerEmotion("Angry")
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Bag_Empty']))
          UI:SetSpeakerEmotion("Normal")
        end
      elseif result == 3 then
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_001']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_002']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_003']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_004']))
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Info_005']))
      else
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Goodbye']))
        state = -1
      end
    elseif state == 1 then
      UI:ShopMenu(catalog)
      UI:WaitForChoice()
      local result = UI:ChoiceResult()
      if #result > 0 then
        local bag_count = GAME:GetPlayerBagCount() + GAME:GetPlayerEquippedCount()
        local bag_cap = GAME:GetPlayerBagLimit()
        if bag_count == bag_cap then
          UI:SetSpeakerEmotion("Angry")
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Bag_Full']))
          UI:SetSpeakerEmotion("Normal")
        else
          cart = result
          state = 2
        end
      else
        state = 0
      end
    elseif state == 2 then
      local total = 0
      for ii = 1, #cart, 1 do
        total = total + catalog[cart[ii]].Price
      end
      local msg
      if total > GAME:GetPlayerMoney() then
        UI:SetSpeakerEmotion("Angry")
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy_No_Money']))
        UI:SetSpeakerEmotion("Normal")
        state = 1
      else
        if #cart == 1 then
          local name = catalog[cart[1]].Item:GetDisplayName()
          msg = STRINGS:Format(STRINGS.MapStrings['Shop_Buy_One'], STRINGS:FormatKey("MONEY_AMOUNT", total), name)
        else
          msg = STRINGS:Format(STRINGS.MapStrings['Shop_Buy_Multi'], STRINGS:FormatKey("MONEY_AMOUNT", total))
        end
        UI:ChoiceMenuYesNo(msg, false)
        UI:WaitForChoice()
        result = UI:ChoiceResult()

        if result then
          GAME:RemoveFromPlayerMoney(total)
          for ii = 1, #cart, 1 do
            local item = catalog[cart[ii]].Item
            GAME:GivePlayerItem(item.ID, item.Amount, false)
          end
          for ii = #cart, 1, -1 do
            table.remove(catalog, cart[ii])
            table.remove(SV.wares_shop, cart[ii])
          end

          cart = {}
          SOUND:PlayBattleSE("DUN_Money")
          UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Buy_Complete']))
          state = 0
        else
          state = 1
        end
      end
    elseif state == 3 then
      UI:SellMenu()
      UI:WaitForChoice()
      local result = UI:ChoiceResult()

      if #result > 0 then
        cart = result
        state = 4
      else
        state = 0
      end
    elseif state == 4 then
      local total = 0
      for ii = 1, #cart, 1 do
        local item
        if cart[ii].IsEquipped then
          item = GAME:GetPlayerEquippedItem(cart[ii].Slot)
        else
          item = GAME:GetPlayerBagItem(cart[ii].Slot)
        end
        total = total + item:GetSellValue()
      end
      local msg
      if #cart == 1 then
        local item
        if cart[1].IsEquipped then
          item = GAME:GetPlayerEquippedItem(cart[1].Slot)
        else
          item = GAME:GetPlayerBagItem(cart[1].Slot)
        end
        msg = STRINGS:Format(STRINGS.MapStrings['Shop_Sell_One'], STRINGS:FormatKey("MONEY_AMOUNT", total), item:GetDisplayName())
      else
        msg = STRINGS:Format(STRINGS.MapStrings['Shop_Sell_Multi'], STRINGS:FormatKey("MONEY_AMOUNT", total))
      end
      UI:ChoiceMenuYesNo(msg, false)
      UI:WaitForChoice()
      result = UI:ChoiceResult()

      if result then
        for ii = #cart, 1, -1 do
          if cart[ii].IsEquipped then
            GAME:TakePlayerEquippedItem(cart[ii].Slot, true)
          else
            GAME:TakePlayerBagItem(cart[ii].Slot, true)
          end
        end
        SOUND:PlayBattleSE("DUN_Money")
        GAME:AddToPlayerMoney(total)
        cart = {}
        UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Shop_Sell_Complete']))
        state = 0
      else
        state = 3
      end
    end
  end
end

-- Gholdengo Bank
function mellow_town.BANK_COUNTER_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()

  local state = 0
  local repeated = false

  local chara = CH("BANK_Gholdengo")
  UI:SetSpeaker(chara)

  while state > -1 do
    local msg = STRINGS:Format(STRINGS.MapStrings['Bank_Intro_001'])
    if repeated == true then
      msg = STRINGS:Format(STRINGS.MapStrings['Bank_Intro_002'])
    end
    local bank_choices = { { STRINGS:FormatKey('MENU_BANK_MANAGE'), true},
    { STRINGS:FormatKey('MENU_INFO'), true},
    { STRINGS:FormatKey("MENU_CANCEL"), true}}
    UI:BeginChoiceMenu(msg, bank_choices, 1, 3)
    UI:WaitForChoice()
    local result = UI:ChoiceResult()
    repeated = true
    if result == 1 then -- Bank
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Bank_Manage'], STRINGS:LocalKeyString(26)))
      UI:BankMenu()
      UI:WaitForChoice()
    elseif result == 2 then
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Bank_Info_001']))
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Bank_Info_002']))
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Bank_Info_003']))
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Bank_Info_004']))
    elseif result == 3 then
      UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Bank_Goodbye']))
      state = -1
    end
  end
end

--Mienshao Moves
function mellow_town.MOVES_COUNTER_Action(obj, activator)
  mellow_town_tutor.MOVES_COUNTER_Action(obj, activator)
end

-- Tinkaton Boxes
function mellow_town.BOX_COUNTER_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine

  local state = 0
  local repeated = false
  local cart = {}
  local price = 150
  local chara = CH('BOX_Tinkaton') --Get Tinkaton
  UI:SetSpeaker(chara)
	while state > -1 do
		if state == 0 then
			local msg = STRINGS:Format(STRINGS.MapStrings['Box_Intro'], STRINGS:FormatKey("MONEY_AMOUNT", price))
			if repeated == true then
				msg = STRINGS:Format(STRINGS.MapStrings['Box_Return'])
			end
			local shop_choices = {STRINGS:Format(STRINGS.MapStrings['Box_Option_Open']),
			STRINGS:FormatKey("MENU_INFO"),
			STRINGS:FormatKey("MENU_EXIT")}
			UI:BeginChoiceMenu(msg, shop_choices, 1, 3)
			UI:WaitForChoice()
			local result = UI:ChoiceResult()
			repeated = true
			if result == 1 then
				local bag_count = GAME:GetPlayerBagCount() + GAME:GetPlayerEquippedCount()
				if bag_count > 0 then
					UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Choose'], STRINGS:LocalKeyString(26)))
					state = 1
				else
					UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Bag_Empty']))
				end
			elseif result == 2 then
				UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Info_001']))
				UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Info_002']))
				UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Info_003']))
				UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Info_004'], STRINGS:FormatKey("MONEY_AMOUNT", price)))
			else
				UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Goodbye']))
				state = -1
			end
		elseif state == 1 then
			UI:AppraiseMenu()
			UI:WaitForChoice()
			local result = UI:ChoiceResult()

			if #result > 0 then
				cart = result
				state = 2
			else
				state = 0
			end
		elseif state == 2 then
			local total = #cart * price

			if total > GAME:GetPlayerMoney() then
				UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_No_Money']))
				state = 1
			else
				local msg
				if #cart == 1 then
					local item
					if cart[1].IsEquipped then
						item = GAME:GetPlayerEquippedItem(cart[1].Slot)
					else
						item = GAME:GetPlayerBagItem(cart[1].Slot)
					end
					msg = STRINGS:Format(STRINGS.MapStrings['Box_Choose_One'], STRINGS:FormatKey("MONEY_AMOUNT", total), item:GetDisplayName())
				elseif #cart < 24 then
					msg = STRINGS:Format(STRINGS.MapStrings['Box_Choose_Multi'], STRINGS:FormatKey("MONEY_AMOUNT", total))
				else
					msg = STRINGS:Format(STRINGS.MapStrings['Box_Choose_Max'], STRINGS:FormatKey("MONEY_AMOUNT", total))

				end
				UI:ChoiceMenuYesNo(msg, false)
				UI:WaitForChoice()
				result = UI:ChoiceResult()

				UI:SetSpeakerEmotion("Normal")

				local treasure = {}
				if result then
					for ii = #cart, 1, -1 do
						local box = nil
						local stack = 0
						if cart[ii].IsEquipped then
							box = GAME:GetPlayerEquippedItem(cart[ii].Slot)
							GAME:TakePlayerEquippedItem(cart[ii].Slot, true)
						else
							box = GAME:GetPlayerBagItem(cart[ii].Slot)
							GAME:TakePlayerBagItem(cart[ii].Slot, true)
						end

            PrintInfo("=>> Box = "..tostring(box.HiddenValue))

						local treasure_item = box.HiddenValue
						local itemEntry = _DATA:GetItem(treasure_item)
						local treasure_choice = { Box = box, Item = RogueEssence.Dungeon.InvItem(treasure_item,false,itemEntry.MaxStack)}
						table.insert(treasure, treasure_choice)

						-- note high rarity items
						if itemEntry.Rarity > 0 then
							SV.unlocked_trades[treasure_item] = true
						end
					end
					SOUND:PlayBattleSE("DUN_Money")
					GAME:RemoveFromPlayerMoney(total)
					cart = {}
          -- Special anim for max amount???
					if #treasure >= 24 then
					  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Start_Max']))
            -- Just one big bonk
            GROUND:EntTurn(chara, Direction.Up)
            GAME:WaitFrames(20)
            GROUND:CharSetAnim(chara, "Charge", true)
            GAME:WaitFrames(40)
            GROUND:CharSetAnim(chara, "Attack", false)
            GAME:WaitFrames(23)
            local shake = RogueEssence.Content.ScreenMover(0, 8, 60)
            GROUND:MoveScreen(shake)
            SOUND:PlayBattleSE("_UNK_DUN_Break")
					  SOUND:PlayBattleSE("DUN_Explosion")
            GAME:WaitFrames(40)

					  GROUND:EntTurn(chara, Direction.Down)
					  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_End_Max_001']))
					  SOUND:PlayFanfare("Fanfare/Treasure")
					  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_End_Max_002']))
          -- Anim if several
					elseif #treasure >= 8 then
					  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Start']))

            GROUND:EntTurn(chara, Direction.Up)
            GAME:WaitFrames(20)
            GROUND:CharSetAnim(chara, "Attack", false)
            GAME:WaitFrames(23)
            local shake = RogueEssence.Content.ScreenMover(0, 8, 30)
            GROUND:MoveScreen(shake)
            SOUND:PlayBattleSE("_UNK_DUN_Break")
            GAME:WaitFrames(20)

            -- Again
            GROUND:CharSetAnim(chara, "Attack", false)
            GAME:WaitFrames(23)
            local shake = RogueEssence.Content.ScreenMover(0, 8, 30)
            GROUND:MoveScreen(shake)
            SOUND:PlayBattleSE("_UNK_DUN_Break")
            GAME:WaitFrames(10)
            -- Again
            GROUND:CharSetAnim(chara, "Attack", false)
            GAME:WaitFrames(23)
            local shake = RogueEssence.Content.ScreenMover(0, 8, 30)
            GROUND:MoveScreen(shake)
            SOUND:PlayBattleSE("_UNK_DUN_Break")
            GAME:WaitFrames(30)

            GROUND:EntTurn(chara, Direction.Down)
            SOUND:PlayFanfare("Fanfare/Treasure")
            UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_End']))
          -- Anim if just one
					else
					  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_Start']))

					  GROUND:EntTurn(chara, Direction.Up)
					  GAME:WaitFrames(20)
            GROUND:CharSetAnim(chara, "Attack", false)
					  GAME:WaitFrames(23)
					  local shake = RogueEssence.Content.ScreenMover(0, 8, 30)
					  GROUND:MoveScreen(shake)
					  SOUND:PlayBattleSE("_UNK_DUN_Break")
					  GAME:WaitFrames(20)
					  GROUND:EntTurn(chara, Direction.Down)
					  SOUND:PlayFanfare("Fanfare/Treasure")
					  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Box_End']))
					end

					UI:SpoilsMenu(treasure)
					UI:WaitForChoice()

					for ii = 1, #treasure, 1 do
						local item = treasure[ii].Item

						GAME:GivePlayerItem(item.ID, item.Amount, false, item.HiddenValue)
					end

					state = 0
				else
					state = 1
				end
			end
		end
	end
end

-- Polteagiest brew
function mellow_town.TEA_COUNTER_Action(obj, activator)
  mellow_town_tea.TEA_COUNTER_Action(chara, activator)
end

--North Exit
function mellow_town.NorthExit_Touch(obj, activator)
  local dungeon_entrances = {"windswept_trail", "frigid_lake", "verdant_meadow", "magma_tunnel", "lunar_barrow", "primal_canyon","stardust_peak"}
  COMMON.ShowDestinationMenu(dungeon_entrances,"")
end

--East Exit
function mellow_town.EastExit_Touch(obj, activator)
  COMMON.ShowDestinationMenu({"wishing_woods", "mindscape_cavern"},"")
end

-- Assembly
function mellow_town.Assembly_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  COMMON.ShowTeamAssemblyMenu(obj, COMMON.RespawnAllies)
  local partner = CH('Teammate1')
  AI:SetCharacterAI(partner, "origin.ai.ground_partner", CH('PLAYER'), partner.Position)
end

-- Teammates
function mellow_town.Teammate1_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue("Let's go, " ..CH("PLAYER"):GetDisplayName().."!")
end

-- Teammates
function mellow_town.Teammate2_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara)
end

function mellow_town.Teammate3_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara)
end

function mellow_town.Sign_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  UI:SetAutoFinish(true)
UI:WaitShowDialogue("[sound=]West: [color=#F8C060]Wishing Woods[color]")
end

-- Mission Test
function mellow_town.MissionTest_Action(obj, activator)
  COMMON.CreateMission("OrangeMiniorRescue",
  { Complete = COMMON.MISSION_INCOMPLETE, Type = COMMON.MISSION_TYPE_RESCUE,
    DestZone = "magma_tunnel", DestSegment = 1, DestFloor = 0,
    FloorUnknown = false,
    TargetSpecies = RogueEssence.Dungeon.MonsterID("minior", 0, "normal", Gender.Genderless),
    ClientSpecies = RogueEssence.Dungeon.MonsterID("minior", 0, "normal", Gender.Genderless) }
  )
  print(SV.missions.Missions["OrangeMiniorRescue"])
end

function mellow_town.Cutscene_Test_Action(obj, activator)
  choices = {"Intro", "Glamour 1", "Glamour 2", "Pyro"}
  UI:BeginChoiceMenu("Choose Cutscene", choices, 1 ,5)
  UI:WaitForChoice()
  result = UI:ChoiceResult()
  if result == 1 then
    SV.mellow_town.CutsceneIntro = false
    GAME:FadeOut(false, 20)
    mellow_town.CutsceneIntro()
  elseif result == 2 then
    SV.mellow_town.CutsceneGlamour1Done = false
    GAME:FadeOut(false, 20)
    mellow_town.CutsceneGlamour1()
  elseif result ==3 then
    SV.mellow_town.CutsceneGlamour2Done = false
    GAME:FadeOut(false, 20)
    mellow_town.CutsceneGlamour2()
  elseif result == 4 then
    SV.mellow_town.CutsceneVanguard1Done = false
    GAME:FadeOut(false, 20)
    mellow_town.CutsceneVanguard1()
  elseif result == 5 then
  end
end

-- Cutscenes --
function mellow_town.CutsceneIntro()
  if SV.mellow_town.CutsceneIntro == false then
    local player = CH("PLAYER")
    local partner = CH("Teammate1")
    local gramps = CH("NPC_Gramps")
    GAME:CutsceneMode(true)
    UI:ResetSpeaker()
    AI:DisableCharacterAI(partner)
    GROUND:Hide("NPC_Drilbur") -- He's in the way so hide him
    GROUND:Hide("NPC_Gramps")
    GROUND:TeleportTo(player, 686, 192, Direction.Left)
    GROUND:TeleportTo(partner, 686, 212, Direction.Left)
    GROUND:TeleportTo(gramps, 412, 24, Direction.Down)
    GAME:FadeIn(20)

    local coro1 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(partner, Direction.Left, 262, false, 1) end)
    local coro2 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(player, Direction.Left, 290, false, 1) end)
    TASK:JoinCoroutines({coro1, coro2})
    GROUND:EntTurn(player, Direction.DownRight)
    GROUND:EntTurn(partner, Direction.UpLeft)
    --First Convo Start
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue("Welcome to Mellow Town!")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("It's a little small and empty...[pause=20] But it has everything aspiring adventurers like us need to take on Mystery Dungeons!")
    GROUND:EntTurn(partner, Direction.Right)
    GROUND:EntTurn(player, Direction.Right)
    UI:WaitShowDialogue("Look over here.")

    -- Move Camera
    GAME:MoveCamera(528, 156, 60, false)
    UI:WaitShowDialogue(STRINGS:Format("Pok√©mon run all sorts of different shops in town, that we can use in exchange for \\uE024."))
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue("The Kecleon Brothers sell loads different goods.[br]The green Kecleon will sell food, throwing items, berries and more.[br]While the purple Kecleon on the right will sell orbs, TMs and other special items!")

    -- Move Camera
    GROUND:EntTurn(partner, Direction.Left)
    GROUND:EntTurn(player, Direction.Left)
    GAME:MoveCamera(216, 168, 60, false)
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue(STRINGS:Format("Gholdengo and Gimmighoul run a bank where we can store our spare \\uE024."))
    UI:WaitShowDialogue("And Mrs Kangaskhan on the right can keep our items safe.")

    -- Move Camera
    GROUND:EntTurn(partner, Direction.DownLeft)
    GROUND:EntTurn(player, Direction.DownLeft)
    GAME:MoveCamera(252, 328, 60, false)
    UI:WaitShowDialogue("Mienshao can help us remember or learn new moves..")

    -- Move Camera
    GROUND:EntTurn(partner, Direction.DownRight)
    GROUND:EntTurn(player, Direction.DownRight)
    GAME:MoveCamera(575, 328, 60, false)
    UI:WaitShowDialogue("And Tinkaton can crack open any locked boxes we find.")
    UI:WaitShowDialogue("Polteagiest and Sinistea moved in recently, I think they're opening up a tea stand or something?")

    -- Move Camera
    GAME:MoveCamera(0, 0, 60, true)
    GROUND:EntTurn(partner, Direction.UpLeft)
    GROUND:EntTurn(player, Direction.DownRight)
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue("But yeah! [pause=20]That's pretty much everything.")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("There's not many of us in town. A lot of the Pok√©mon that come through here stop for a bit while they take on the Mystery Dungeons.")
    UI:WaitShowDialogue("Speaking of which...[pause=0][emote=worried]\nWhere's Gramps? I hope he's not still upset...")

    UI:ResetSpeaker()
    shake = RogueEssence.Content.ScreenMover(0, 12, 20)
    GROUND:MoveScreen(shake)
    SOUND:PlayBattleSE("EVT_Roar")
    UI:WaitShowDialogue(STRINGS:Format("\\uE040: " ..partner:GetDisplayName().. "![pause=0] Where have you been!"))
    GROUND:Unhide("NPC_Gramps")
    GROUND:EntTurn(partner, Direction.Up)
    GROUND:EntTurn(player, Direction.Up)
    GROUND:CharSetEmote(player, "shock", 1)
    GROUND:CharSetEmote(partner, "shock", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Startled_2")
    GAME:WaitFrames(30)
    GROUND:MoveInDirection(gramps, Direction.Down, 130, false, 1)
    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue("[speed=0.7] I've been besides myself with worry all night!\nWhat do you have to say for yourself!")

    GROUND:CharSetEmote(partner, "sweating", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Sweating")
    GAME:WaitFrames(30)
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("surprised")
    UI:WaitShowDialogue("G-gramps![pause=20] I was just-")

    GROUND:CharSetEmote(gramps, "angry", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
    GAME:WaitFrames(30)
    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue("[speed=0.7]I don't want to hear it!")
    UI:WaitShowDialogue("[speed=0.7]You're grounded!")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue("What? That's not fair!\n I promised to get " ..player:GetDisplayName().. " home!")


    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("determined")
    UI:WaitShowDialogue("[speed=0.7]What?")
    GROUND:EntTurn(gramps, Direction.DownLeft)
    UI:SetSpeakerEmotion("surprised")
    UI:WaitShowDialogue("[speed=0.7]What!")
    SOUND:PlaySE("Battle/EVT_Emote_Shock_2")
    UI:WaitShowDialogue("[speed=0.7]You're a Minior, aren't you?[pause=20]")
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("[speed=0.7]What are you doing here?")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("determined")
    UI:WaitShowDialogue("They crashed near [color=#F8C060]Stardust Peak[color]!")
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("All their friends are missing, so I promised to get them home...")

    GROUND:EntTurn(gramps, Direction.Down)
    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("sad")
    UI:WaitShowDialogue("[speed=0.7]Oh " ..partner:GetDisplayName().. "...")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("And I need your help, Gramps. How can we get " ..player:GetDisplayName().. " and their friends back home to space?")

    GROUND:CharSetEmote(gramps, "sweatdrop", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
    GROUND:EntTurn(gramps, Direction.Right)
    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("[speed=0.5]........[pause=60]")
    GROUND:EntTurn(gramps, Direction.Down)
    UI:WaitShowDialogue("You made it all the way through [color=#F8C060]Wishing Woods[color] and back?")

    GROUND:CharSetAnim(partner, "Nod", false)
    GAME:WaitFrames(30)

    UI:SetSpeakerEmotion("normal")
    UI:WaitShowDialogue("[speed=0.7]Then maybe... [pause=30][color=#F8C060]Stardust Peak[color] is the best way to get your friend home.")
    UI:WaitShowDialogue("[speed=0.7]Legends say the mountain is the bridge between our lands and the stars above...")
    UI:WaitShowDialogue("[speed=0.7]And that it's the home of a terrible Pok√©mon who rules the skies!")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("inspired")
    UI:WaitShowDialogue("Woah! Cool!")

    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("determined")
    UI:WaitShowDialogue("[speed=0.7]No! Not cool! Dangerous!")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("Gramps...")
    UI:SetSpeakerEmotion("happy")
    UI:WaitShowDialogue("Me and " ..player:GetDisplayName().. " can handle it!")
    UI:WaitShowDialogue("Especially if we can recruit some other friends along the way!")

    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("[speed=0.7]It's dangerous, " ..partner:GetDisplayName().. ", you know that, right?")
    UI:WaitShowDialogue("[speed=0.7]You'll have to go through many other Mystery Dungeons to even get to the foot of the mountain.")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("Yeah, but...")
    GROUND:EntTurn(partner, Direction.UpLeft)
    UI:SetSpeakerEmotion("happy")
    UI:WaitShowDialogue("As long as " ..player:GetDisplayName().. " is with me, I'll be okay! They're strong!")

    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("worried")
    GROUND:EntTurn(gramps, Direction.DownLeft)
    UI:WaitShowDialogue("[speed=0.7]Well then, " ..player:GetDisplayName().. ".")

    UI:ChoiceMenuYesNo("[speed=0.7]Will you keep my " ..partner:GetDisplayName().. " safe?", false)
    UI:WaitForChoice()
    ch = UI:ChoiceResult()
    if ch then
      UI:SetSpeaker(gramps)
      UI:SetSpeakerEmotion("sigh")
      UI:WaitShowDialogue("[speed=0.7]Good...")
      UI:SetSpeakerEmotion("determined")
      UI:WaitShowDialogue("[speed=0.7]Then I'm counting on you! If " ..partner:GetDisplayName().. " gets hurt, it's on you!")
    else
      UI:SetSpeaker(gramps)
      UI:SetSpeakerEmotion("determined")
      UI:WaitShowDialogue("[speed=0.7]For your sake, I will assume that is a joke.")
      UI:WaitShowDialogue("[speed=0.7]I'm counting on you! If " ..partner:GetDisplayName().. " gets hurt, it's on you!")
    end
    GROUND:EntTurn(gramps, Direction.Down)
    UI:SetSpeakerEmotion("normal")
    UI:WaitShowDialogue("[speed=0.7]If you really want to do this, then I shouldn't stand in your way.")
    UI:SetSpeakerEmotion("teary-eyed")
    UI:WaitShowDialogue("[speed=0.7]Oh...[pause=20] I suppose you had to grow up some day... sniffle...")
    GAME:WaitFrames(30)
    UI:SetSpeakerEmotion("normal")
    UI:WaitShowDialogue("[speed=0.7]Ahem...[pause=20]I think you should probably start your journey at [color=#F8C060]Windswept Trail[color].")
    UI:WaitShowDialogue("[speed=0.7]It's a Mystery Dungeon that runs down by the coast, and will get you a step closer to [color=#F8C060]Stardust Peak[color].")
    UI:WaitShowDialogue("[speed=0.7]I also have a hunch...[br]If your friend here was found near a Mystery Dungeon, then chances are their other friends will have been drawn to them as well.")
    UI:WaitShowDialogue("[speed=0.7]You may have to look out for hidden areas to find them.")
    UI:WaitShowDialogue("[speed=0.7]Once you clear a dungeon for the first time, it'll be a lot easier to get back there to continue your journey.")
    UI:WaitShowDialogue("[speed=0.7]Make sure you come back to town to rest and resupply before heading out again.")
    UI:WaitShowDialogue("[speed=0.7]And one more thing...")
    UI:ResetSpeaker()
    UI:WaitShowDialogue("Gramps gave you an [color=#F8F800]Adventurer's Badge[color]!")
    UI:SetSpeaker(gramps)
    UI:WaitShowDialogue("[speed=0.7]You can use that to rescue any of " ..player:GetDisplayName().."\'s friends you do encounter.")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("teary-eyed")
    UI:WaitShowDialogue("Sniffle...[pause=20] Thanks, Gramps.")

    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("teary-eyed")
    UI:WaitShowDialogue("[speed=0.7]Be safe, and don't do anything reckless...")
    UI:WaitShowDialogue("[speed=0.7]And if you need any advice, just ask.")

    GROUND:CharSetAnim(partner, "Nod", false)
    GAME:WaitFrames(30)
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("teary-eyed")
    UI:WaitShowDialogue("Okay!")
    UI:SetSpeakerEmotion("determined")
    GROUND:EntTurn(partner, Direction.UpLeft)
    UI:WaitShowDialogue("Okay, " ..player:GetDisplayName().. "! Let's go find your friends and get to [color=#F8C060]Stardust Peak[color].")
    --End
    COMMON.UnlockWithFanfare("windswept_trail", false)
    SV.mellow_town.CutsceneIntro = true
    GAME:CutsceneMode(false)
    AI:EnableCharacterAI(partner)
    COMMON.UpdateDayEndVars()
  end
end

function mellow_town.CutsceneGlamour1()
  if SV.mellow_town.CutsceneGlamour1Done == false then
    GAME:CutsceneMode(true)


    -- Set up characters
    local player = CH("PLAYER")
    local partner = CH("Teammate1")
    AI:DisableCharacterAI(partner)
    local sneasler = CH("NPC_Sneasler")
    local tsareena = CH("NPC_Tsareena")
    local granbull = CH("NPC_Granbull")

    GROUND:TeleportTo(player, 384, 216, Direction.Right)
    GROUND:TeleportTo(partner, 432, 216, Direction.Left)

    GROUND:TeleportTo(tsareena, 384, 72, Direction.Down)
    GROUND:TeleportTo(sneasler, 408, 72, Direction.Down)
    GROUND:TeleportTo(granbull, 432, 72, Direction.Down)
    tsareena.CollisionDisabled = true
    GROUND:Unhide("NPC_Tsareena")
    sneasler.CollisionDisabled = true
    GROUND:Unhide("NPC_Sneasler")
    granbull.CollisionDisabled = true
    GROUND:Unhide("NPC_Granbull")

    GROUND:TeleportTo(CH("NPC_Fearow"), 408, 360, Direction.Up)
    GROUND:TeleportTo(CH("NPC_Spearow"), 432, 360, Direction.Up)
    GROUND:TeleportTo(CH("NPC_Monferno"), 240, 200, Direction.Up)
    GROUND:TeleportTo(CH("NPC_Lilligant"), 240, 224, Direction.Up)
    GROUND:TeleportTo(CH("NPC_Cyclizar"), 596, 208, Direction.Up)

    GROUND:Hide("NPC_Gramps") -- In the way again

    GAME:MoveCamera(24, 0, 1, true)

    GAME:FadeIn(20)

    UI:SetSpeaker(partner)
    UI:WaitShowDialogue("Okay, " ..player:GetDisplayName().. ", ready to head out?")

    UI:SetSpeaker(player)
    UI:SetSpeakerEmotion("Happy")
    UI:WaitShowDialogue("Yep![pause=20] Let's go!")

    UI:ResetSpeaker()
    UI:WaitShowDialogue((STRINGS:Format("\\uE040: My my, what a quaint little town~")))

    SOUND:PlayBGM("Team Charm's Theme.ogg", true)

    GAME:WaitFrames(20)

    GROUND:EntTurn(player, Direction.Up)
    GROUND:EntTurn(partner, Direction.Up)

    local coro1= TASK:BranchCoroutine(function() mellow_town.Coro_Walk(tsareena, Direction.Down, 96, false, 1) end)
    local coro2= TASK:BranchCoroutine(function() mellow_town.Coro_Walk(sneasler, Direction.Down, 96, false, 1) end)
    local coro3= TASK:BranchCoroutine(function() mellow_town.Coro_Walk(granbull, Direction.Down, 96, false, 1) end)
    TASK:JoinCoroutines({coro1, coro2, coro3})


    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Happy")
    UI:WaitShowDialogue("It's rather cute, don't you think, " ..tsareena:GetDisplayName().. "?")

    UI:SetSpeaker(tsareena)
    UI:SetSpeakerEmotion("Special0")
    UI:WaitShowDialogue("I suppose...[pause=30] It doesn't look nearly up to my standards though...")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("What do you think, " ..granbull:GetDisplayName().. "?")

    UI:SetSpeaker(granbull)
    UI:WaitShowDialogue("It's fine.")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Special0")
    UI:WaitShowDialogue("Now now, ladies, I'm sure this town is perfectly adequate for [color=#F8A0F8]Team Glamour[color]'s needs.")

    GAME:WaitFrames(20)

    UI:SetSpeaker(player)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("[color=#F8A0F8]Team Glamour[color]?")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Inspired")
    UI:WaitShowDialogue("[color=#F8A0F8]Team Glamour[color]!")
    UI:WaitShowDialogue("You're [color=#F8A0F8]Team Glamour[color]?!")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Happy")
    UI:WaitShowDialogue("Oh?[pause=30] Are you a fan, perhaps?")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Inspired")
    UI:WaitShowDialogue("Am I?[pause=20] I'm your biggest fan![pause=0] You've been my idols since I was young!")

    local drilbur = CH("NPC_Drilbur")
    GROUND:MoveInDirection(drilbur, Direction.Up, 12  , true, 2)
    GROUND:CharTurnToChar(drilbur, sneasler)
    UI:SetSpeaker(drilbur)
    GROUND:CharSetEmote(drilbur, "glowing", 1)
    UI:WaitShowDialogue("Wow![pause=20] [color=#F8A0F8]Team Glamour[color]! Here in Mellow Town!")

    local coro1 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(CH("NPC_Fearow"), Direction.Up, 60, false, 2) end)
    local coro2 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(CH("NPC_Spearow"), Direction.Up, 60, false, 2) end)
    local coro3 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Monferno"), 368, 192, false, 2) end)
    local coro4 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Cyclizar"), 456, 192, false, 2) end)
    local coro5 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Lilligant"), 348, 208, false, 2) end)

    TASK:JoinCoroutines({coro1, coro2, coro3, coro4, coro5})

    GROUND:CharTurnToChar(CH("NPC_Monferno"), tsareena)
    GROUND:CharTurnToChar(CH("NPC_Lilligant"), tsareena)
    GROUND:CharTurnToChar(CH("NPC_Cyclizar"), granbull)

    GROUND:EntTurn(CH("MART_Kecleon_Left"), Direction.DownLeft) --turn a specific direction
    GROUND:EntTurn(CH("MART_Kecleon_Right"), Direction.DownLeft) --turn a specific direction
    GROUND:EntTurn(CH("STORAGE_Kangaskhan"), Direction.Right) --turn a specific direction
    GROUND:EntTurn(CH("MOVES_Mienshao"), Direction.UpRight) --turn a specific direction
    GROUND:EntTurn(CH("BOX_Tinkaton"), Direction.UpLeft) --turn a specific direction

    UI:SetSpeaker(CH("NPC_Morgrem"))
    UI:WaitShowDialogue("Neat.")

    UI:SetSpeaker(CH("NPC_Spearow"))
    GROUND:CharSetEmote(CH("NPC_Spearow"), "glowing", 3)
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue("Woah!")

    UI:SetSpeaker(CH("NPC_Monferno"))
    GROUND:CharSetEmote(CH("NPC_Monferno"), "glowing", 3)
    UI:SetSpeakerEmotion("Special1")
    UI:WaitShowDialogue("It is an honour to welcome you to Mellow Town!")

    UI:SetSpeaker(CH("NPC_Lilligant"))
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue("What a pleasant surprise!")

    UI:SetSpeaker(CH("NPC_Cyclizar"))
    UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue("What?[pause=20] What's [color=#F8A0F8]Team Glamour[color] doing here?")

    GROUND:CharSetEmote(player, "question", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Confused")
    GAME:WaitFrames(30)

    UI:SetSpeaker(player)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("Who's [color=#F8A0F8]Team Glamour[color]?")

    UI:SetSpeaker(tsareena)
    UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue("What?[pause=0] You don't know who we are?")

    GROUND:CharTurnToChar(partner, player)
    GROUND:CharTurnToChar(player, partner)
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue("They're one of top rank Adventuring Teams! One of the best in the whole world!")

    GROUND:CharTurnToChar(partner, sneasler)
    GROUND:CharTurnToChar(player, sneasler)

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Special0")
    UI:WaitShowDialogue("Number two in the world, actually~")
    UI:WaitShowDialogue("And, as it happens...[pause=0] We're here to find a secret treasure and finally make it to number one!")

    UI:SetSpeaker(tsareena)
    UI:SetSpeakerEmotion("Special0")
    UI:WaitShowDialogue("Our rightful place, of course.")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Special0")
    UI:WaitShowDialogue("Our goal is [color=#F8C060]Stardust Peak[color].")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("We got a tip that there's a hidden treasure there!")
    UI:SetSpeakerEmotion("Inspired")
    UI:WaitShowDialogue("And when we find it, we'll be the number one adventuring team!")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Joyous")
    GROUND:CharSetEmote(partner, "glowing", 1)
    UI:WaitShowDialogue("No way![pause=20] We're aiming for [color=#F8C060]Stardust Peak[color] too!")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("We're trying to get to the top so " ..player:GetDisplayName().. " can go home.")

    UI:SetSpeaker(tsareena)
    UI:SetSpeakerEmotion("Inspired")
    UI:WaitShowDialogue("Oh, how cute!")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue("Well, good luck with that![pause=20] I'm sure you'll get there someday!")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("But, maybe better to start off with something a little more appropriate for your age, no?")

    GROUND:CharSetEmote(partner, "sweatdrop", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
    GAME:WaitFrames(30)

    GROUND:CharTurnToChar(partner, player)
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue("We're plenty tough enough...")

    UI:SetSpeaker(sneasler)
    UI:WaitShowDialogue("I must thank you all for your hospitality.")
    GROUND:CharTurnToChar(sneasler, tsareena)
    UI:WaitShowDialogue("Come on, we need to get some supplies before we leave.")

    GROUND:MoveToPosition(granbull, 408, 192, false, 2)
    GROUND:EntTurn(granbull, Direction.Right)
    -- Move everyone back
    SOUND:PlayBGM("Base Town.ogg", true)
    GROUND:MoveInDirection(drilbur, Direction.Down, 12  , true, 2)
    GROUND:EntTurn(drilbur, Direction.UpLeft)
    --
    local coro1 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(sneasler, 496, 176, false, 2) end)
    local coro2 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(tsareena, 472, 176, false, 2) end)
    TASK:JoinCoroutines({coro1, coro2})

    GROUND:EntTurn(sneasler, Direction.Up)
    GROUND:EntTurn(tsareena, Direction.UpRight)

    local coro1 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Fearow"), 408, 360, false, 2) end)
    local coro2 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Spearow"), 408, 360, false, 2) end)
    local coro3 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Cyclizar"), 408, 360, false, 2) end)
    local coro4 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Monferno"), 408, 360, false, 2) end)
    local coro5 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(CH("NPC_Lilligant"), 336, 72, false, 2) end)
    TASK:JoinCoroutines({coro1, coro2, coro3, coro4, coro5})

    GROUND:TeleportTo(CH("NPC_Fearow"), 367, 399, Direction.UpRight)
    GROUND:TeleportTo(CH("NPC_Spearow"), 385, 417, Direction.UpRight)
    GROUND:TeleportTo(CH("NPC_Cyclizar"), 567, 356, Direction.DownLeft)
    GROUND:TeleportTo(CH("NPC_Monferno"), 169, 346, Direction.DownRight)
    GROUND:TeleportTo(CH("NPC_Lilligant"), 79, 218, Direction.DownRight)

    GAME:WaitFrames(20)

    GROUND:CharTurnToChar(granbull, partner)
    GROUND:CharTurnToChar(partner, granbull)

    UI:SetSpeaker(granbull)
    UI:WaitShowDialogue("Don't be put off by " ..sneasler:GetDisplayName()..".")
    UI:WaitShowDialogue("She means well, but simply chooses the wrong words sometimes.")
    UI:WaitShowDialogue("I believe in your ability to get your friend home.")
    UI:WaitShowDialogue("Good luck.")
    GROUND:MoveToPosition(granbull, 552, 192, false, 2)
    GROUND:MoveToPosition(granbull, 552, 176, false, 2)
    GROUND:EntTurn(granbull, Direction.UpLeft)

    GROUND:EntTurn(CH("STORAGE_Kangaskhan"), Direction.Down)
    GROUND:EntTurn(CH("MOVES_Mienshao"), Direction.Down)
    GROUND:EntTurn(CH("BOX_Tinkaton"), Direction.Down)

    GROUND:CharTurnToChar(partner, player)
    GROUND:CharTurnToChar(player, partner)

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Joyous")
    GROUND:CharSetEmote(partner, "glowing", 1)
    UI:WaitShowDialogue("I can't believe we just met [color=#F8A0F8]Team Glamour[color]!")
    UI:WaitShowDialogue("Can you believe it?!")
    GROUND:CharTurnToChar(partner, granbull)
    UI:WaitShowDialogue("And " ..granbull:GetDisplayName().. "...[pause=0] She was so nice!")
    GROUND:CharTurnToChar(partner, player)
    UI:SetSpeakerEmotion("Sigh")
    UI:WaitShowDialogue("Even if what " ..sneasler:GetDisplayName().. " said was a little upsetting...")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("Still, I shouldn't let it get to me.[pause=0] [color=#F8C060]Stardust Peak[color], here we come!")
    UI:WaitShowDialogue("Let's go, " ..player:GetDisplayName().."!")

    SV.mellow_town.CutsceneGlamour1Done = true
    GAME:CutsceneMode(false)
    AI:EnableCharacterAI(partner)
  end
end

function mellow_town.CutsceneGlamour2()
  if SV.mellow_town.CutsceneGlamour2Done == false then
    GAME:CutsceneMode(true)
    -- Setup characters
    local player = CH("PLAYER")
    local partner = CH("Teammate1")
    local gramps = CH("NPC_Gramps")
    local sneasler = CH("NPC_Sneasler")
    local tsareena = CH("NPC_Tsareena")
    local lilligant = CH("NPC_Lilligant")
    AI:DisableCharacterAI(partner)
    -- Set Locations
    GROUND:TeleportTo(tsareena, 392, 216, Direction.Down)
    GROUND:CharSetAnim(tsareena, "Sleep", true)
    GROUND:Unhide("NPC_Tsareena")
    GROUND:TeleportTo(sneasler, 416, 216, Direction.Down)
    GROUND:CharSetAnim(sneasler, "Sleep", true)
    GROUND:Unhide("NPC_Sneasler")
    GROUND:TeleportTo(lilligant, 362, 184, Direction.DownRight)
    GROUND:TeleportTo(gramps, 452, 180, Direction.DownLeft)

    GROUND:TeleportTo(player, 400, 16, Direction.Down)
    GROUND:TeleportTo(partner, 424, 16, Direction.Down)
    -- Start
    GAME:FadeIn(20)

    local coro1 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(partner, Direction.Down, 12, false, 1) end)
    local coro2 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(player, Direction.Down, 12, false, 1) end)

    TASK:JoinCoroutines({coro1, coro2})
    GAME:WaitFrames(30)

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("Hey, what's going on there?[pause=0][emote=surprised] Is that [color=#F8A0F8]Team Glamour[color]?")

    coro1 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(partner, Direction.Down, 64, false, 2) end)
    coro2 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(player, Direction.Down, 64, false, 2) end)
    TASK:JoinCoroutines({coro1, coro2})
    GAME:WaitFrames(40)

    GROUND:EntTurn(partner, Direction.DownRight)
    UI:WaitShowDialogue("Gramps![pause=20] What happened!")
    GROUND:EntTurn(gramps, Direction.UpLeft)

    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("[speed=0.7]I'm afraid I don't know.")
    GROUND:CharTurnToChar(gramps, sneasler)
    UI:WaitShowDialogue("[speed=0.7]They both showed up in town a short while ago and collapsed.")
    GROUND:EntTurn(gramps, Direction.UpLeft)
    UI:WaitShowDialogue("[speed=0.7][color=#00F8F8]Lilligant[color] has been trying to use a herbal remedy to wake them up.")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue("Urgh...")

    UI:SetSpeaker(lilligant)
    UI:WaitShowDialogue("I think she's waking up!")

    GROUND:CharEndAnim(sneasler)
    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue("Ugh...[pause=20] My head...")

    GROUND:EntTurn(gramps, Direction.DownLeft)
    GROUND:EntTurn(partner, Direction.Down)
    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("[speed=0.7]" ..sneasler:GetDisplayName()..", thank goodness you're alright.[pause=0] What happened to you two?")

    GROUND:EntTurn(sneasler, Direction.UpRight)
    GROUND:CharEndAnim(sneasler)
    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue("We...[pause=20] We were attacked.")
    SOUND:PlayBGM("Threat.ogg", true)
    UI:WaitShowDialogue("We got separated on the mountain...[pause=0] And before I knew it, I was attacked by this huge,[pause=10] monstrous Pok√©mon!")
    UI:WaitShowDialogue("I got out,[pause=10] and found " ..tsareena:GetDisplayName().. ".[pause=0] We just about managed to get back to town before passing out...")
    UI:WaitShowDialogue("That [pause=10]thing,[pause=10] whatever it was...[pause=20] It was completely out of control.[pause=0] We didn't stand a chance...")

    GROUND:EntTurn(sneasler, Direction.Up)

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("But...[pause=0] Where's " ..CH("NPC_Granbull"):GetDisplayName().. "?")

    GROUND:CharSetEmote(sneasler, "sweating", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Sweating")
    GAME:WaitFrames(30)
    GROUND:EntTurn(sneasler, Direction.Down)
    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue("I...[pause=20] I don't know. [pause=0]Like I said, we got separated. She could be fine...")

    GROUND:CharSetEmote(partner, "angry", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
    GAME:WaitFrames(30)
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue("What do you mean you don't know?!")
    UI:WaitShowDialogue("She's supposed to be your partner, your friend, and you just left her on that mountain?")
    UI:WaitShowDialogue("She could be hurt,[pause=10] or worse!")

    GROUND:EntTurn(sneasler, Direction.Up)
    GROUND:CharSetEmote(sneasler, "angry", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
    GAME:WaitFrames(30)
    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue("Don't you think I haven't thought of that!")
    UI:SetSpeakerEmotion("Teary-eyed")
    UI:WaitShowDialogue("She's missing...[pause=30] And it's all my fault!")
    UI:WaitShowDialogue("I should've never taken us up that mountain, not with that monster up there.")

    GROUND:EntTurn(partner, Direction.Left)
    GROUND:EntTurn(player, Direction.Right)
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Determined")
    UI:WaitShowDialogue(player:GetDisplayName().."![pause=0] We need to go rescue " ..CH("NPC_Granbull"):GetDisplayName().."!")

    GROUND:EntTurn(gramps, Direction.UpLeft)
    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("Shouting")
    UI:WaitShowDialogue("[speed=1.1]Absolutely not![pause=0] It's far too dangerous for the two of you.")
    GROUND:EntTurn(player, Direction.DownRight)
    GROUND:EntTurn(partner, Direction.DownRight)
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("[speed=0.7]The best course of action...[pause=20] Is to contact another Adventuring Team to rescue "..CH("NPC_Granbull"):GetDisplayName()..".")
    UI:WaitShowDialogue("[speed=0.7]I will send word to the Adventurer's Association at once, and request them to send another high-rank team.")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue("There's only one team that can handle this.")
    GROUND:EntTurn(player, Direction.Down)
    GROUND:EntTurn(partner, Direction.Down)
    GROUND:EntTurn(gramps, Direction.DownLeft)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("We need [color=#F8A0F8]Team Vanguard[color].")
    UI:WaitShowDialogue("They're the only ones with a chance against that monster.[pause=0] The only ones with the skill to rescue "..CH("NPC_Granbull"):GetDisplayName()..".")

    GROUND:CharSetEmote(player, "question", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Confused")
    GAME:WaitFrames(30)
    UI:SetSpeaker(player)
    UI:WaitShowDialogue("[color=#F8A0F8]Team Vanguard[color]?")

    UI:SetSpeaker(sneasler)
    UI:WaitShowDialogue("They're the highest ranked Adventuring Team in the world. Without a doubt the strongest.")
    UI:WaitShowDialogue("Their leader has the unique ability to change their type as well, meaning they'll have the upper hand against that monster.")

    UI:SetSpeaker(gramps)
    UI:WaitShowDialogue("[speed=0.7]I agree with you. I will send word immediately. [pause=30]In the meantime, you and " ..tsareena:GetDisplayName().. " need to stay here and rest.")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue("I suppose we don't have much of a choice...")

    UI:SetSpeaker(gramps)
    GROUND:EntTurn(gramps, Direction.UpLeft)
    GROUND:EntTurn(partner, Direction.DownRight)
    UI:WaitShowDialogue("[speed=0.7]" ..partner:GetDisplayName().. ", I want you and " ..player:GetDisplayName().. " to continue your journey.")
    UI:WaitShowDialogue("[speed=0.7]You still have many Mystery Dungeons to get through before reaching [color=#F8C060]Stardust Peak[color].")
    UI:WaitShowDialogue("[speed=0.7]Hopefully,[pause=10] this situation will have resolved itself by the time you both arrive there.")

    GROUND:CharSetEmote(partner, "sweatdrop", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
    GAME:WaitFrames(30)
    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue("But Gramps, maybe we can help...")

    UI:SetSpeaker(gramps)
    UI:WaitShowDialogue("[speed=0.7]I know you want to help, and that is admirable.")
    UI:WaitShowDialogue("[speed=0.7]But part of growing up is knowing to pick your battles.")
    UI:WaitShowDialogue("[speed=0.7]I don't want to see you or " ..player:GetDisplayName().. " end up hurt like [color=#F8A0F8]Team Glamour[color]...[pause=20] Or worse...")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("Okay, Gramps.[pause=30] I understand.")
    GROUND:EntTurn(partner, Direction.Left)
    GROUND:EntTurn(player, Direction.Right)
    UI:WaitShowDialogue("Come on, " ..player:GetDisplayName().. ". Let's go get prepared for our next dungeon.")
    SOUND:PlayBGM("Base Town.ogg", true)
    -- End[]
    SV.mellow_town.CutsceneGlamour2Done = true
    SV.mellow_town.AfterCutsceneGlamour2 = true
    GAME:CutsceneMode(false)
    AI:EnableCharacterAI(partner)
  end
end

function mellow_town.CutsceneVanguard1()
  if SV.mellow_town.CutsceneVanguard1Done ~= true then
    GAME:CutsceneMode(true)
    -- Seet up characters
    local player = CH("PLAYER")
    local partner = CH("Teammate1")
    local gramps = CH("NPC_Gramps")
    local sneasler = CH("NPC_Sneasler")
    local tsareena = CH("NPC_Tsareena")
    local silvally = CH("NPC_Silvally")
    local ceruledge = CH("NPC_Ceruledge")
    local noivern = CH("NPC_Noivern")
    local granbullName = CH("NPC_Granbull"):GetDisplayName()
    AI:DisableCharacterAI(partner)
    -- Set Locations
    GROUND:TeleportTo(player, 384, 182, Direction.Down)
    GROUND:TeleportTo(partner, 408, 182, Direction.Down)
    GROUND:TeleportTo(tsareena, 384, 214, Direction.Up)
    GROUND:TeleportTo(sneasler, 408, 214, Direction.Up)
    GROUND:TeleportTo(gramps, 600, 192, Direction.Left)
    GROUND:TeleportTo(silvally, 624, 192, Direction.Left)
    GROUND:TeleportTo(noivern, 648, 212, Direction.Left)
    GROUND:TeleportTo(ceruledge, 648, 180, Direction.Left)

    GROUND:Unhide("NPC_Silvally")
    GROUND:Unhide("NPC_Ceruledge")
    GROUND:Unhide("NPC_Noivern")
    noivern.CollisionDisabled = true
    GROUND:Hide("NPC_Morgrem")
    GROUND:Hide("NPC_Drilbur") --Both in the way
    -- Set Camera
    GAME:MoveCamera(24, 0, 1, true)
    -- Start
    GAME:FadeIn(20)
    GROUND:MoveToPosition(gramps, 444, 192, false, 2)
    UI:SetSpeaker(gramps)
    UI:WaitShowDialogue("[speed=0.7]They're here.")
    GROUND:MoveToPosition(gramps, 444, 168, false, 2)
    GROUND:EntTurn(gramps, Direction.DownRight)
    GROUND:EntTurn(player, Direction.Right)
    GROUND:EntTurn(partner, Direction.Right)
    GROUND:EntTurn(sneasler, Direction.Right)
    GROUND:EntTurn(tsareena, Direction.Right)

    local coro1 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(silvally, Direction.Left, 132, false, 1) end)
    local coro2 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(ceruledge, Direction.Left, 132, false, 1) end)
    local coro3 = TASK:BranchCoroutine(function() mellow_town.Coro_Walk(noivern, Direction.Left, 132, false, 1) end)
    TASK:JoinCoroutines({coro1, coro2, coro3})
    GAME:WaitFrames(30)

    UI:SetSpeaker(silvally)
    UI:WaitShowDialogue("Greetings.[pause=30] I am " ..silvally:GetDisplayName()..", the leader of [color=#F8A0F8]Team Vanguard[color].")
    UI:WaitShowDialogue("Behind me are my compatriots, " ..ceruledge:GetDisplayName().. " and " ..noivern:GetDisplayName()..".")
    UI:WaitShowDialogue(sneasler:GetDisplayName().." of [color=#F8A0F8]Team Glamour[color][pause=20], we were requested to recover your missing companion, " ..granbullName..".")
    UI:WaitShowDialogue("Is this correct?")

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("Yes...")

    UI:SetSpeaker(silvally)
    UI:WaitShowDialogue("Affirmative.[pause=30] You also mentioned a dangerous and powerful Pok√©mon.[pause=0] What details can you give us about it?")

    UI:SetSpeaker(tsareena)
    UI:WaitShowDialogue("It was a huge, serpentine monster![pause=0] It's scales were emerald green, and it had yellow markings.")

    UI:SetSpeaker(player)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("[sound=](Why does that sound so familiar[speed=0.5]...?)")
    GROUND:CharSetEmote(player, "shock", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Exclaim_Realized")
    GAME:WaitFrames(30)
    UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue("[sound=](Wait! I know why!)")
    UI:WaitShowDialogue("I know that Pok√©mon!")

    GROUND:CharTurnToChar(tsareena, player)
    GROUND:CharTurnToChar(sneasler, player)
    GROUND:CharTurnToChar(gramps, player)
    GROUND:CharTurnToChar(partner, player)
    GROUND:CharSetEmote(partner, "shock", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Exclaim_2")
    GAME:WaitFrames(20)

    UI:WaitShowDialogue("The Pok√©mon that attacked me and my friends...[pause=30] And sent us crashing out of the sky...")
    UI:WaitShowDialogue("Looked exactly like that!")
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue("It's called [color=#009800]Rayquaza[color].[pause=0] Normally, it lives on the edge of space.")
    UI:WaitShowDialogue("But then one day it suddenly went on a rampage, attacking us for no reason!")

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("What?[pause=30] That sounds terrible...")

    UI:SetSpeaker(silvally)
    UI:WaitShowDialogue("I am familiar with [color=#009800]Rayquaza[color]. It is a legendary Pok√©mon, said to be master of the skies.")
    UI:WaitShowDialogue("[emote=worried]However, for a legendary Pok√©mon to go on an unprompted rampage as you have described...")
    UI:WaitShowDialogue("I fear there is something worse at play here...")

    GROUND:CharSetEmote(sneasler, "angry", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
    GAME:WaitFrames(30)

    UI:SetSpeaker(sneasler)
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue("Argh, who cares about any of that!")
    GROUND:CharTurnToChar(tsareena, sneasler)
    GROUND:CharTurnToChar(player, sneasler)
    GROUND:CharTurnToChar(gramps, sneasler)
    GROUND:CharTurnToChar(partner, sneasler)
    UI:WaitShowDialogue("What about " ..granbullName.. "?")

    UI:SetSpeaker(silvally)
    UI:WaitShowDialogue("If we must contend with [color=#009800]Rayquaza[color] to rescue " ..granbullName.. " then we must figure out a plan.")
    GROUND:CharTurnToChar(tsareena, silvally)
    GROUND:CharTurnToChar(player, silvally)
    GROUND:CharTurnToChar(gramps, silvally)
    GROUND:CharTurnToChar(partner, silvally)
    GROUND:CharTurnToChar(sneasler, silvally)
    UI:WaitShowDialogue(STRINGS:Format("I am certain [color=#009800]Rayquaza[color] is a \\uE083Dragon-type Pok√©mon."))
    UI:WaitShowDialogue("Thus...")
    GROUND:CharSetAnim(silvally, "Charge", true)
    GAME:WaitFrames(16)
    local emitter = RogueEssence.Content.SingleEmitter(RogueEssence.Content.AnimData("Copycat_Front", 3))
    emitter.LocHeight = 8
    GROUND:PlayVFX(emitter, silvally.Bounds.Center.X, silvally.Bounds.Center.Y)
    SOUND:PlaySE("Battle/DUN_Copycat_2")
    local form = silvally.CurrentForm
    local newForm = RogueEssence.Dungeon.MonsterID(form.Species, 17, form.Skin, form.Gender)
    silvally.Data.BaseForm = newForm
    GAME:WaitFrames(16)
    GROUND:CharEndAnim(silvally)
    UI:WaitShowDialogue(STRINGS:Format("By transforming into the \\uE08EFairy type, we shall surely have the upper hand."))

    UI:SetSpeaker(gramps)
    UI:WaitShowDialogue("[speed=0.7]The facilities of Mellow Town are available for you to prepare yourselves.")
    GROUND:CharTurnToChar(gramps, partner)
    UI:WaitShowDialogue("[speed=0.7]" ..partner:GetDisplayName().. ", perhaps it would be best to wait until after [color=#F8A0F8]Team Vanguard[color] have dealt with [color=#009800]Rayquaza[color] before climbing [color=#F8C060]Stardust Peak[color] yourselves.")
    UI:WaitShowDialogue("[speed=0.7]It would be far safer that way.")

    UI:SetSpeaker(partner)
    UI:WaitShowDialogue("Actually, "  ..gramps:GetDisplayName().. ", I had my own plan for that.")
    UI:WaitShowDialogue("We don't know if [color=#009800]Rayquaza[color] will come back after " ..silvally:GetDisplayName().. " defeats it or not.")
    UI:WaitShowDialogue("And if it does come back, it'll be just as dangerous.")
    UI:WaitShowDialogue("So why don't we go to [color=#F8C060]Stardust Peak[color] at the same time as them?")
    UI:WaitShowDialogue("That way, [color=#009800]Rayquaza[color] will be busy dealing with them, and we can get " ..player:GetDisplayName().. " to the top of the mountain to get home!")

    GROUND:CharSetEmote(gramps, "sweatdrop", 1)
    SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
    GAME:WaitFrames(30)
    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("[speed=0.7]I don't know...[pause=0] It still seems so dangerous...")

    UI:SetSpeaker(partner)
    UI:WaitShowDialogue("We'll be safe, I promise.")
    UI:WaitShowDialogue("Please, " ..gramps:GetDisplayName().. ". We can't wait around forever to get " ..player:GetDisplayName().. " home.")

    UI:SetSpeaker(gramps)
    UI:SetSpeakerEmotion("worried")
    UI:WaitShowDialogue("[speed=0.7]Maybe...[pause=30] maybe it is a good plan.")
    UI:SetSpeakerEmotion("normal")
    UI:WaitShowDialogue("[speed=0.7]Okay. But be safe. Take this with you.")

    UI:ResetSpeaker()
    SOUND:PlayFanfare("Fanfare/Note")
    UI:WaitShowDialogue("[sound=]You received a "..RogueEssence.Dungeon.InvItem("seed_reviver"):GetDisplayName()..".")
    GAME:GivePlayerItem("seed_reviver", 1)

    UI:SetSpeaker(partner)
    UI:WaitShowDialogue("Thank you, " ..gramps:GetDisplayName().. ". I'll be safe, I promise.")
    UI:WaitShowDialogue(silvally:GetDisplayName().. ", we'll try to stay out of your way. The last thing you need is to rescue us too.")


    UI:SetSpeaker(silvally)
    UI:WaitShowDialogue("Affirmative. I commend your courage.")
    GROUND:EntTurn(silvally, Direction.Right)
    UI:WaitShowDialogue("Come comrades, we must prepare for our expedition.")

    UI:SetSpeaker(ceruledge)
    UI:WaitShowDialogue("Right.")

    UI:SetSpeaker(noivern)
    UI:WaitShowDialogue("Sure.")

    coro1 =  TASK:BranchCoroutine(function() GROUND:MoveToPosition(silvally, 480, 176, false, 2) end)
    coro2 =  TASK:BranchCoroutine(function() GROUND:MoveToPosition(noivern, 552, 176, false, 2) end)
    coro3 =  TASK:BranchCoroutine(function() GROUND:MoveToPosition(ceruledge, 492, 176, false, 2) end)

    TASK:JoinCoroutines({coro1, coro2, coro3})

    GROUND:EntTurn(silvally, Direction.UpRight)
    GROUND:EntTurn(ceruledge, Direction.Up)
    GROUND:EntTurn(noivern, Direction.Up)
    noivern.CollisionDisabled = false

    GROUND:EntTurn(partner, Direction.Left)
    UI:SetSpeaker(partner)
    UI:WaitShowDialogue("Come on, " ..player:GetDisplayName().. ", let's do the same.")
    UI:WaitShowDialogue("It's finally time to take on [color=#F8C060]Stardust Peak[color]!")
    -- End
    SV.mellow_town.CutsceneVanguard1Done = true
    GAME:CutsceneMode(false)
    AI:EnableCharacterAI(partner)
  end
end

function mellow_town.Coro_Walk(chara, direction, distance, run, speed)
  GROUND:MoveInDirection(chara, direction, distance, run, speed)
end

return mellow_town
