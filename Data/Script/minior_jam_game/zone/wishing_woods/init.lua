--[[
    init.lua
    Created: 03/25/2025 18:43:16
    Description: Autogenerated script file for the map wishing_woods.
]]--
-- Commonly included lua functions and data
require 'origin.common'

-- Package name
local wishing_woods = {}

-------------------------------
-- Zone Callbacks
-------------------------------
---wishing_woods.Init(zone)
--Engine callback function
function wishing_woods.Init(zone)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PrintInfo("=>> Init_wishing_woods")

end

---wishing_woods.EnterSegment(zone, rescuing, segmentID, mapID)
--Engine callback function
function wishing_woods.EnterSegment(zone, rescuing, segmentID, mapID)


end

---wishing_woods.ExitSegment(zone, result, rescue, segmentID, mapID)
--Engine callback function
function wishing_woods.ExitSegment(zone, result, rescue, segmentID, mapID)
  PrintInfo("=>> ExitSegment_frigid_lake result "..tostring(result).." segment "..tostring(segmentID).."\n\n\n")
  if result == 1 then --Actually lost
    UI:SetSpeaker(GAME:GetPlayerPartyMember(1))
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue("Urk...[pause=20] This is harder than I thought...[pause=20] Let's head home for now...")
    COMMON.EndDungeonDay(result, 'crash_site', -1, 0, 1)
  else
    COMMON.EndDungeonDay(result, 'mellow_town', -1, 0, 1)
  end
  -- PrintInfo("=>> Exit_wishing_woods")
  -- if segmentID == 0 then
  --   COMMON.EndDungeonDay(result, 'mellow_town', -1, 0, 0)
  -- else
  --   PrintInfo("No exit procedure found!")
  -- COMMON.EndDungeonDay(result, SV.checkpoint.Zone, SV.checkpoint.Segment, SV.checkpoint.Map, SV.checkpoint.Entry)
  -- end
end

---wishing_woods.Rescued(zone, name, mail)
--Engine callback function
function wishing_woods.Rescued(zone, name, mail)


end

return wishing_woods
